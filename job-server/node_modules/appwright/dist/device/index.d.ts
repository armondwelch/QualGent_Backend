import type { Client as WebDriverClient } from "webdriver";
import { AppwrightLocator, IDevice as IDevice, Platform, TestInfoOptions } from "../types";
export declare class Device implements IDevice {
    private webdriverClient;
    private bundleId;
    private testOptions;
    constructor(webdriverClient: WebDriverClient, bundleId: string, testOptions: TestInfoOptions);
    locator(path: string | RegExp, findStrategy: string, textToMatch?: string): AppwrightLocator;
    private vision;
    beta: {
        tap: (prompt: string) => Promise<void>;
        extractText: (prompt: string) => Promise<string>;
    };
    close(): Promise<void>;
    tap({ x, y }: {
        x: number;
        y: number;
    }): Promise<void>;
    getByText(text: string | RegExp, { exact }?: {
        exact?: boolean;
    }): AppwrightLocator;
    getById(text: string | RegExp, { exact }?: {
        exact?: boolean;
    }): AppwrightLocator;
    getByXpath(xpath: string): AppwrightLocator;
    getPlatform(): Platform;
    getClipboardText(): Promise<string>;
}
//# sourceMappingURL=index.d.ts.map